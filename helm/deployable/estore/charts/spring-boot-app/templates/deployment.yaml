---
# Source: estore/charts/spring-boot-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-app
  labels:
    app.kubernetes.io/name: spring-boot-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: estore
    app.kubernetes.io/part-of: payments-product
    helm.sh/chart: spring-boot-app-0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spring-boot-app
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spring-boot-app
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/component: estore
        app.kubernetes.io/part-of: payments-product
      annotations:
        checksum/application.config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/application.logback: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      containers:
        - name: spring-boot-app
          #image: 'localhost/estore/:'
          image: ':'
          imagePullPolicy: Always
          ports:
            - name: app
              containerPort: 8081
              protocol: TCP
            - name: mgmt
              containerPort: 8181
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: mgmt
            initialDelaySeconds: 300
            periodSeconds: 10
            timeoutSeconds: 7
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: mgmt
            initialDelaySeconds: 300
            periodSeconds: 10
            timeoutSeconds: 7
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: application-configvolume
              mountPath: /opt/app/java/config/application.yml
              subPath: application.yml
              readOnly: true
            - name: application-logback-configvolume
              mountPath: /opt/app/java/config/logback.xml
              subPath: logback.xml
              readOnly: true
          env:
            - name: SPRING_CONFIG_LOCATION
              value: file:./config/
            - name: SPRING_PROFILES_ACTIVE
              value: boot
            - name: DEPLOYMENT_NAME
              value: release-name
            - name: PERFINO
              value: 'false'
            - name: OVEROPS
              value: 'false'
            - name: SERVICE_NAME
              value: 'spring-boot-app'
            - name: LOCAL_USER_ID
              value: '9001'
            - name: CLOUDHSM_IP
              value: ''

            - name: JAVA_OPTS
              value: -noverify -XX:-UseAdaptiveSizePolicy -XX:+UseG1GC -XX:MaxGCPauseMillis=200
                -XX:InitiatingHeapOccupancyPercent=70 -XX:MinRAMPercentage=30.0 -XX:InitialRAMPercentage=40.0
                -XX:MaxRAMPercentage=50.0 -XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=40 -XX:ParallelGCThreads=4
            - name: JAVA_OPTS1
              value: -Djava.util.concurrent.ForkJoinPool.common.parallelism=4 -Dserver.tomcat.min-spare-threads=2
            
          resources:
            limits:
              cpu: "4"
              memory: 1.5Gi
            requests:
              cpu: 100m
              memory: 800Mi
            
      restartPolicy: Always
      volumes:
        - name: application-configvolume
          configMap:
            name: spring-boot-app
            items:
              - key: application.yml
                path: application.yml
        - name: application-logback-configvolume
          configMap:
            name: log-configmap
            items:
              - key: logback.xml
                path: logback.xml

      imagePullSecrets:
        - name: dtrcred
